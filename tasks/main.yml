---
- name: Ensure dotfiles repository is cloned locally.
  ansible.builtin.git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_repo_local_destination }}"
    version: "{{ dotfiles_repo_version }}"
    accept_hostkey: "{{ dotfiles_repo_accept_hostkey }}"
  become: false

- name: Ensure all configured dotfiles are links.
  ansible.builtin.command: "ls -F {{ dotfiles_home }}/{{ item }}"
  register: existing_dotfile_info
  failed_when: false
  check_mode: false
  changed_when: false
  with_items: "{{ dotfiles_files }}"

- name: Remove existing dotfiles file if a replacement is being linked.
  ansible.builtin.file:
    path: "{{ dotfiles_home }}/{{ dotfiles_files[item.0] }}"
    state: absent
  loop_control:
    label: "{{ dotfiles_files[item.0] }}"
  when: "'@' not in item.1.stdout"
  with_indexed_items: "{{ existing_dotfile_info.results }}"

- name: Get list of directories
  ansible.builtin.shell: set -o pipefail && find . -maxdepth 5 -type d | grep -E '.config|.mozilla|.ansible' | cut -c 3-
  args:
    executable: /bin/sh
    chdir: "{{ dotfiles_repo_local_destination }}"
  register: dotfiles_dirs
  changed_when: false

- name: Get list of scripts
  ansible.builtin.shell: set -o pipefail && find . -type f \( -name "*.py" -o -name "*.sh" \) | cut -c 3-
  args:
    executable: /bin/sh
    chdir: "{{ dotfiles_repo_local_destination }}"
  register: dotfiles_scripts
  changed_when: false
  when: dotfiles_repo_permissions

- name: Prepare directories
  ansible.builtin.file:
    dest: "{{ dotfiles_home }}/{{ item }}"
    state: directory
    mode: 0755
  become: false
  with_items: "{{ dotfiles_dirs.stdout_lines }}"

- name: Link dotfiles into home folder.
  ansible.builtin.file:
    src: "{{ dotfiles_repo_local_destination }}/{{ item }}"
    dest: "{{ dotfiles_home }}/{{ item }}"
    state: link
    mode: u=rw,g=r,o=r
  become: false
  with_items: "{{ dotfiles_files }}"

- name: Change permissions for scripts
  ansible.builtin.file:
    dest: "{{ dotfiles_home }}/{{ item }}"
    state: link
    mode: 0755
  become: false
  when: dotfiles_repo_permissions
  with_items: "{{ dotfiles_scripts.stdout_lines }}"
